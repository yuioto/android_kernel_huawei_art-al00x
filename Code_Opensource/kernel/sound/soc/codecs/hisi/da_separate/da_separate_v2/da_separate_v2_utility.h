/*
 * da_separate_v2_driver codec driver.
 *
 * Copyright (c) 2015 Hisilicon Technologies CO., Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __DA_SEPARATE_V2_UTILITY_H__
#define __DA_SEPARATE_V2_UTILITY_H__

#include <linux/kernel.h>
#include <linux/pm_runtime.h>
#include <sound/core.h>
#include <sound/pcm.h>
#include <sound/initval.h>
#include <sound/soc.h>
#include <asm/io.h>
#include <linux/version.h>

/* DA_SEPARATE_V2 REGISTER RESOURCE NUM (comply with dts) */
enum da_separate_reg_resource {
	DA_SEPARATE_V2_SOCCODEC = 0,
	DA_SEPARATE_V2_ASPCFG,
	DA_SEPARATE_V2_AOIOC,
	DA_SEPARATE_V2_REG_CNT
};

#define ALSA_REG_MASK                0x7FFFFFFF
#define ASP_CODEC_REG_BASE           0xE8052000
#define ASP_CFG_REG_BASE             0xE804E000
#define PAGE_SoCCODEC                (ASP_CODEC_REG_BASE & ALSA_REG_MASK)
#define PAGE_ASPCFG                  (ASP_CFG_REG_BASE & ALSA_REG_MASK)
#define PAGE_AO_IOC                  0x7FF11000
#ifdef CONFIG_HISI_HI6555V500_PMU
#define PAGE_PMU_CODEC               0xC000
#define PAGE_PMU_CTRL                0x0
#define PAGE_PMU_HKADC               0x2000
#define PMUCODEC_START               0x0
#define PMUCODEC_END                 0x4c
#define PMUCTRL_START                0x0
#define PMUCTRL_END                  0x583
#define PMUHKADC_START               0x0
#define PMUHKADC_END                 0x10
#else
#define PAGE_PMU_CODEC               0x0
#endif
#define PAGE_VIRCODEC                0x8000
#define PAGE_TYPE_MASK               0x7FFFF000
#define PAGE_VALUE_MASK              0x00000FFF

#define INVALID_REG_VALUE            0xFFFFFFFF
#define MAX_UINT32                   0xFFFFFFFF
#define MAX_INT32                    0x7FFFFFFF

#define DA_SEPARATE_V2_SoCCODEC_START      0x00
#define DA_SEPARATE_V2_SoCCODEC_END        0xD4
#define DA_SEPARATE_V2_PMUCODEC_START      0x00
#define DA_SEPARATE_V2_PMUCODEC_END        0x3D3
#define DA_SEPARATE_V2_PMUHKADC_START      0x23E
#define DA_SEPARATE_V2_PMUHKADC_END        0x24E
#define DA_SEPARATE_V2_PCTRL_START         0x000
#define DA_SEPARATE_V2_PCTRL_END           0xC18
#define DA_SEPARATE_V2_PMUCTRL_START       0x000
#define DA_SEPARATE_V2_PMUCTRL_END         0x15E
#define DA_SEPARATE_V2_VIRCODEC_START      0
#define DA_SEPARATE_V2_VIRCODEC_END        (DA_SEPARATE_V2_VIR_CNT - 1)
#define DA_SEPARATE_V2_ASPCFG_START        0x000
#define DA_SEPARATE_V2_ASPCFG_END          0x200
#define DA_SEPARATE_V2_AOIOC_START         0x000
#define DA_SEPARATE_V2_AOIOC_END           0xF54
#define DA_SEPARATE_V2_IOC_START           0x000
#define DA_SEPARATE_V2_IOC_END             0xA30
#define DA_SEPARATE_V2_PERICRG_START       0x000
#define DA_SEPARATE_V2_PERICRG_END         0xE2C

#ifdef CONFIG_HISI_HI6555V500_PMU
#define CTRL_REG_REG_CLASSD_EN_OFFSET CTRL_REGA_REG_CLASSD_EN_OFFSET
#define CTRL_REG_CLASSD_P_SEL_OFFSET CTRL_REGB_CLASSD_P_SEL_OFFSET
#define CTRL_REG_CLASSD_N_SEL_OFFSET CTRL_REGB_CLASSD_N_SEL_OFFSET
#define CTRL_REG_CLASSD_MUTE_OFFSET CTRL_REGB_CLASSD_MUTE_OFFSET
#define CTRL_REG_CLASSD_GAIN_OFFSET CTRL_REGB_CLASSD_GAIN_OFFSET
#define CTRL_REG_CLASSD_MUTE_SEL_OFFSET CTRL_REGB_CLASSD_MUTE_SEL_OFFSET
#define CTRL_REG_CLASSD_DRV_EN_OFFSET CTRL_REGB_CLASSD_DRV_EN_OFFSET
#define CODEC_MAINPGA_MUTE_OFFSET MAINPGA_MUTE_OFFSET
#define CODEC_AUXPGA_MUTE_OFFSET AUXPGA_MUTE_OFFSET
#define CODEC_MAINPGA_PD_OFFSET MAINPGA_PD_OFFSET
#define CODEC_AUXPGA_PD_OFFSET AUXPGA_PD_OFFSET
#define CODEC_MIC3PGA_PD_OFFSET MIC3PGA_PD_OFFSET
#define CODEC_MIC3PGA_MUTE_OFFSET MIC3PGA_MUTE_OFFSET
#define CODEC_ADCL_PD_OFFSET ADCL_PD_OFFSET
#define CODEC_ADCR_PD_OFFSET ADCR_PD_OFFSET
#define CODEC_ADC3_PD_OFFSET ADC3_PD_OFFSET
#define CODEC_MUTE_ADCL_OFFSET ADCL_MUTE_OFFSET
#define CODEC_MUTE_ADCR_OFFSET ADCR_MUTE_OFFSET
#define CODEC_MUTE_ADC3_OFFSET ADC3_MUTE_OFFSET
#define CODEC_ANA_RW_04_DAPL_PD_OFFSET DACL_PD_OFFSET
#define CODEC_ANA_RW_04_DAPR_PD_OFFSET DACR_PD_OFFSET
#define CODEC_ANA_RW_05_HPL_MUTE_OFFSET HPL_MUTE_OFFSET
#define CODEC_ANA_RW_05_HPR_MUTE_OFFSET HPR_MUTE_OFFSET
#define CODEC_EAR_PD_OFFSET EAR_PD_OFFSET
#define CODEC_LOUT_PD_OFFSET LOUT_PD_OFFSET
#define CODEC_MIXOUT_EAR_PD_OFFSET MIXOUT_EAR_PD_OFFSET
#define CODEC_EAR_VREF_PD_OFFSET EPVCM_PD_OFFSET
#define CODEC_EAR_MUTE_OFFSET EAR_MUTE_OFFSET
#define CODEC_LOUT_MUTE_OFFSET LOUT_MUTE_OFFSET
#define CODEC_MAINPGA_SEL_OFFSET MAINPGA_SEL_OFFSET
#define CODEC_MAINPGA_BOOST_OFFSET MAINPGA_BOOST_OFFSET
#define CODEC_MAINPGA_GAIN_OFFSET MAINPGA_GAIN_OFFSET
#define CODEC_AUXPGA_BOOST_OFFSET AUXPGA_BOOST_OFFSET
#define CODEC_AUXPGA_GAIN_OFFSET AUXPGA_GAIN_OFFSET
#define CODEC_MIC3PGA_BOOST_OFFSET ADC3PGA_BOOST_OFFSET
#define CODEC_MIC3PGA_GAIN_OFFSET MIC3PGA_GAIN_OFFSET
#define CODEC_ADCL_MIXIN_DACL_OFFSET ADCL_MIXIN_DACL_OFFSET
#define CODEC_ADCL_MIXIN_DACR_OFFSET ADCL_MIXIN_DACR_OFFSET
#define CODEC_ADCL_MIXIN_MIC_PGA1_OFFSET ADCL_MIXIN_MICPGA1_OFFSET
#define CODEC_ADCL_MIXIN_MIC_PGA2_OFFSET ADCL_MIXIN_MICPGA2_OFFSET
#define CODEC_IDEL_TONE_CTRL_OFFSET IDEL_TONE_CTRL_OFFSET
#define CODEC_ADCR_MIXIN_DACL_OFFSET ADCR_MIXIN_DACL_OFFSET
#define CODEC_ADCR_MIXIN_DACR_OFFSET ADCR_MIXIN_DACR_OFFSET
#define CODEC_ADCR_MIXIN_MIC_PGA1_OFFSET ADCR_MIXIN_MICPGA1_OFFSET
#define CODEC_ADCR_MIXIN_MIC_PGA2_OFFSET ADCR_MIXIN_MICPGA2_OFFSET
#define CODEC_ADC3_MIXIN_DACL_OFFSET ADC3_MIXIN_DACL_OFFSET
#define CODEC_ADC3_MIXIN_DACR_OFFSET ADC3_MIXIN_ULTRA_OFFSET
#define CODEC_ADC3_MIXIN_MIC_PGA1_OFFSET ADC3_MIXIN_MICPGA1_OFFSET
#define CODEC_ADC3_MIXIN_MIC_PGA3_OFFSET ADC3_MIXIN_MICPGA3_OFFSET
#define CODEC_ANA_RW_20_HP_L_DACL_OFFSET MIXOUT_HSL_DACL_OFFSET
#define CODEC_ANA_RW_20_HP_L_DACR_OFFSET MIXOUT_HSL_DACR_OFFSET
#define CODEC_ANA_RW_20_HP_R_DACL_OFFSET MIXOUT_HSR_DACL_OFFSET
#define CODEC_ANA_RW_20_HP_R_DACR_OFFSET MIXOUT_HSR_DACR_OFFSET
#define CODEC_HSL_GAIN_OFFSET HSL_GAIN_OFFSET
#define CODEC_HSR_GAIN_OFFSET HSR_GAIN_OFFSET
#define CODEC_STB_CTRL_SEC_OFFSET STB_CTRL_SEC_OFFSET
#define CODEC_STB_CTRL_OFFSET STB_CTRL_OFFSET
#define CODEC_STB_1N_OFFSET STB_1N_OFFSET
#define CODEC_STB_N12DB_GAIN_OFFSET STB_N12DB_GAIN_OFFSET
#define CODEC_MIXOUT_EAR_DACL_OFFSET MIXOUT_EAR_DACL_OFFSET
#define CODEC_MIXOUT_EAR_DACR_OFFSET MIXOUT_EAR_DACR_OFFSET
#define CODEC_CR_MIXF_DACL_PGA_EN_OFFSET CR_MIXER_EP_DACL_OFFSET
#define CODEC_CR_MIXF_DACR_PGA_EN_OFFSET CR_MIXER_EP_DACR_OFFSET
#define CODEC_EAR_GAIN_OFFSET EAR_GAIN_OFFSET
#define CODEC_LOUT_GAIN_OFFSET LOUT_GAIN_OFFSET
#define CODEC_ANA_LINEOUT_REG CODEC_ANA_RW28_REG
#define CTRL_REG_ANA_SPK_PGA_MUTE_REG CTRL_REGB_CLASSD_CTRL1_REG
#define CTRL_REG_ANA_SPK_PGA_REG CTRL_REGB_CLASSD_CTRL0_REG
#define CTRL_REG_CLASSD_MUTE_SEL_REG CTRL_REGB_CLASSD_CTRL1_REG
#define CTRL_REG_CLASSD_ANA_SPK_SWITCH_REG CTRL_REGB_CLASSD_CTRL0_REG
#define CTRL_REG_CLASSD_ANA_SPK_DAPM_REG CTRL_REGA_CLASSD_ONOFF_REG
#define CTRL_REG_CLASSD_P_N_SEL_REG CTRL_REGB_CLASSD_CTRL1_REG
#else
#define CODEC_ANA_LINEOUT_REG CODEC_ANA_RW27_REG
#define CTRL_REG_ANA_SPK_PGA_MUTE_REG CTRL_REG_CLASSD_CTRL0_REG
#define CTRL_REG_ANA_SPK_PGA_REG CTRL_REG_CLASSD_CTRL0_REG
#define CTRL_REG_CLASSD_MUTE_SEL_REG CTRL_REG_CLASSD_CTRL0_REG
#define CTRL_REG_CLASSD_ANA_SPK_SWITCH_REG CTRL_REG_CLASSD_CTRL0_REG
#define CTRL_REG_CLASSD_ANA_SPK_DAPM_REG CTRL_REG_CLASSD_CTRL0_REG
#define CTRL_REG_CLASSD_P_N_SEL_REG CTRL_REG_CLASSD_CTRL1_REG
#endif

extern int da_separate_v2_base_addr_map(struct platform_device *pdev);
extern void da_separate_v2_base_addr_unmap(void);
extern void da_separate_v2_clr_reg_bits(unsigned int reg, unsigned int value);
extern unsigned int da_separate_v2_reg_read(struct snd_soc_component *codec, unsigned int reg);
extern int da_separate_v2_reg_update(unsigned int reg, unsigned int mask, unsigned int value);
extern int da_separate_v2_reg_write(struct snd_soc_component *codec, unsigned int reg, unsigned int value);
extern void da_separate_v2_set_reg_bits(unsigned int reg, unsigned int value);

#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,19,0))
unsigned int da_separate_v2_reg_read_by_codec(struct snd_soc_codec *codec, unsigned int reg);
int da_separate_v2_reg_write_by_codec(struct snd_soc_codec *codec, unsigned int reg, unsigned int value);
#endif

#endif /* __DA_SEPARATE_V2_UTILITY_H__ */

